@node Integration
@section Integration

The integration setup is covered by the `(integration)' section of
the steering file or the integration data file `Integration.dat',
respectively.

The following parameters are used to steer the integration.

@menu
* INTEGRATION_ERROR::    The relative integration error
* INTEGRATOR::           The integrator type
* VEGAS::                Whether to enable Vegas
* FINISH_OPTIMIZATION::  Whether to fully optimise the Vegas grid
* PSI_NMAX::             Maximum number of points per process
* PSI_ITMIN::            Minimum number of points per iteration cycle
* PSI_ITMAX::            Maximum number of points per iteration cycle
* PSI_ITMIN_BY_NODE::    Minimum number of points per iteration by node
* PSI_ITMAX_BY_NODE::    Maximum number of points per iteration by node
@end menu


@node INTEGRATION_ERROR
@subsection INTEGRATION_ERROR
@cindex INTEGRATION_ERROR
Specifies the relative integration error target.


@node INTEGRATOR
@subsection INTEGRATOR
@cindex INTEGRATOR
Specifies the integrator. The possible integrator types
depend on the matrix element generator. In general users 
should rely on the default value and otherwise seek the 
help of the authors, see @ref{Authors}.
Within AMEGIC++ the options @option{AMEGIC_INTEGRATOR} and
@option{AMEGIC_RS_INTEGRATOR} can be used to steer the behaviour
of the default integrator
@itemize
@item @option{4}: building up the channels is achieved through 
respecting the peak structure given by the propagators. The 
algorithm works recursively starting from the initial state.
@item @option{5}: this is an extension of option 4. In the case of competing peaks (e.g. a Higgs boson decaying into W+W−, which further decay), additional channels are produced to account for all kinematical conﬁgurations where one 
of the propagating particles is produced on its mass shell.
@item @option{6}: in contrast to option 4 the algorithm now starts from the 
ﬁnal state. The extra channels described in option 5 are produced as well. 
This is the default integrator.
@item @option{7}: Same as option @option{4} but with tweaked 
exponents. Optimised for the integration of real-subtracted 
matrix-elements.
@end itemize 
In addition, a few ME-generator independent integrators
have been implemented for specific processes:
@itemize @bullet
@item @option{Rambo}: RAMBO @mycite{Kleiss1985gy}. Generates isotropic 
final states.
@item @option{VHAAG}: Vegas-improved HAAG integrator @mycite{vanHameren2002tc}.
@item @option{VHAAG_res}: is an integrator for a final state of a weak boson,
decaying into two particles plus two or more jets based on HAAG @mycite{vanHameren2002tc}. 
When this integrator is used the keyword @code{VHAAG_RES_KF} specifies
the kf-code of the weak boson, the default is W (@code{24}).
@code{VHAAG_RES_D1} and @code{VHAAG_RES_D2} define the
positions of the Boson decay products within the internal
naming scheme, where @code{2} is the position of the first
outgoing particle. The defaults are @code{VHAAG_RES_D1=2}
and @code{VHAAG_RES_D2=3}, which is the correct choice for
all processes where the decay products are the only not
strongly interacting final state particles.
@end itemize

@node VEGAS
@subsection VEGAS
@cindex VEGAS
Specifies whether or not to employ Vegas for adaptive integration.
The two possible values are @option{On} and @option{Off}, the
default being @option{On}.


@node FINISH_OPTIMIZATION
@subsection FINISH_OPTIMIZATION
@cindex FINISH_OPTIMIZATION
Specifies whether the full Vegas optimization is to be carried out.
The two possible options are @option{On} and @option{Off}, the
default being @option{On}.

@node PSI_NMAX
@subsection PSI_NMAX
@cindex PSI_NMAX
The maximum number of points before cuts to be generated during integration.
This parameter acts on a process-by-process basis.

@node PSI_ITMIN
@subsection PSI_ITMIN
@cindex PSI_ITMIN
The minimum number of points used for every optimisation cycle. Please note 
that it might be increased automatically for complicated processes.

@node PSI_ITMAX
@subsection PSI_ITMAX
@cindex PSI_ITMAX
The maximum number of points used for every optimisation cycle. Please note 
that for complicated processes the number given might be insufficient for 
a meaningful optimisation.

@node PSI_ITMIN_BY_NODE
@subsection PSI_ITMIN_BY_NODE
@cindex PSI_ITMIN_BY_NODE
Same as @ref{PSI_ITMIN}, but specified per node to allow tuning of 
integration performance in large-scale MPI runs.

@node PSI_ITMAX_BY_NODE
@subsection PSI_ITMAX_BY_NODE
@cindex PSI_ITMAX_BY_NODE
Same as @ref{PSI_ITMAX}, but specified per node to allow tuning of 
integration performance in large-scale MPI runs.
